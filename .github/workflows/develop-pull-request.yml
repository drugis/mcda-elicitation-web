name: MCDA develop pull request

on:
  pull_request:
    branches: feature/workflow

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version: ["12"]
        os: [ubuntu-16.04]

    # services:
    #   postgres:
    #     image: postgres
    #     env:
    #       POSTGRES_USER: postgres
    #       POSTGRES_PASSWORD: develop
    #       POSTGRES_DB: postgres
    #     ports:
    #       - 5432:5432
    #     # needed because the postgres container does not provide a healthcheck
    #     options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v1

      - name: check branches
        run: |
          git branch

      # - name: create ssl files
      #   run: |
      #     echo "${{ secrets.pataviClientCrt }}" > crt.pem 
      #     echo "${{ secrets.pataviClientKey }}" > key.pem

      # - name: setup mcda database
      #   run: |
      #      docker exec ${{ job.services.postgres.id }} psql -U postgres -c "CREATE USER mcdaweb WITH PASSWORD 'develop'"
      #      docker exec ${{ job.services.postgres.id }} psql -U postgres -c "CREATE DATABASE mcdaweb ENCODING 'utf-8' OWNER mcdaweb"

      # - name: initialize mcda database
      #   run: |
      #     docker cp database.pg.sql ${{ job.services.postgres.id }}:/database.pg.sql
      #     docker exec ${{ job.services.postgres.id }} psql -U mcdaweb -f database.pg.sql

      # - name: add local user
      #   run: docker exec ${{ job.services.postgres.id }} psql -U mcdaweb -c "INSERT INTO Account (username, firstName, lastName, password) VALUES ('user', 'john', 'dough', '$2a$14$ZjMqaDjVymMrgaA.kUFJxe0R4gWyOE4vZMUVZ4OlIq4p.wT48hy3u')"

      # - name: Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: ${{ matrix.node-version }}

      # - name: run yarn
      #   run: yarn

      # - name: front-end tests
      #   run: npx karma start --singleRun

      # - name: back-end tests
      #   run: npx mocha --exit

      # - name: run webpack
      #   run: npm run build-local-login

      # - name: run mcda
      #   run: node index.js &
      #   env:
      #     MCDAWEB_AUTHENTICATION_METHOD: LOCAL
      #     MCDAWEB_DB_USER: mcdaweb 
      #     MCDAWEB_DB_PASSWORD: develop
      #     MCDAWEB_DB_HOST: localhost
      #     MCDAWEB_DB_NAME: mcdaweb
      #     MCDAWEB_GOOGLE_KEY: ${{ secrets.mcdaGoogleKey }}
      #     MCDAWEB_GOOGLE_SECRET: ${{ secrets.mcdaGoogleSecret }}
      #     MCDAWEB_COOKIE_SECRET: abc
      #     MCDA_HOST: localhost
      #     PATAVI_HOST: patavi-test.drugis.org
      #     PATAVI_PORT: 443
      #     PATAVI_CLIENT_KEY: key.pem
      #     PATAVI_CLIENT_CRT: crt.pem

      # - name: run nightwatch tests
      #   run: npm run test-end-to-end

      # - name: stop mcda
      #   run: sudo pkill -9 node
