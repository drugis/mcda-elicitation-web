apiVersion: v1
kind: Pod
metadata:
  name: mcda-test-db-init
  namespace: drugis-test
  labels:
    app: mcda-test-db-init
spec:
  initContainers:
    - name: wait-for-db
      image: postgres:10.8
      env:
        - name: PGUSER
          value: postgres
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: POSTGRES_PASSWORD
      command: ['sh', '-c']
      args:
        - until psql -h postgres -c  "select version();"; do echo waiting for postgres; sleep 2; done;
    - name: get-mcda-test-schema
      image: busybox:1.28
      command:
        [
          'sh',
          '-c',
          'wget -O /schema-data/mcda-schema.sql https://raw.githubusercontent.com/drugis/mcda-elicitation-web/develop/database.pg.sql'
        ]
      volumeMounts:
        - name: schema-data
          mountPath: /schema-data
    - name: create-mcda-test-user
      image: postgres:10.8
      env:
        - name: PGUSER
          value: postgres
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: POSTGRES_PASSWORD
        - name: MCDAWEB_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mcda-test-secrets
              key: MCDAWEB_DB_PASSWORD
      command: ['sh', '-c']
      args:
        - psql -h postgres -c  "DO \$\$ BEGIN CREATE ROLE mcdatest LOGIN PASSWORD '$(MCDAWEB_DB_PASSWORD)'; EXCEPTION WHEN DUPLICATE_OBJECT THEN RAISE NOTICE 'not creating role mcdatest -- it already exists'; END \$\$"
    - name: create-mcda-database
      image: postgres:10.8
      env:
        - name: PGUSER
          value: postgres
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: POSTGRES_PASSWORD

      command: ['sh', '-c']
      args:
        - psql -h postgres -c "SELECT 1 FROM pg_database WHERE datname = 'mcdatest'" | grep -q 1 || psql -h postgres -c "CREATE DATABASE mcdatest"
  restartPolicy: Never
  containers:
    - name: run-liquibase
      image: webdevops/liquibase:postgres
      env:
        - name: LIQUIBASE_URL
          value: 'jdbc:postgresql://postgres:5432/mcdatest'
        - name: LIQUIBASE_USERNAME
          value: 'mcdatest'
        - name: LIQUIBASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mcda-test-secrets
              key: MCDAWEB_DB_PASSWORD
        - name: LIQUIBASE_CHANGELOG
          value: '/schema-data/mcda-schema.sql'
      args:
        - 'update'
      volumeMounts:
        - name: schema-data
          mountPath: /schema-data
  volumes:
    - name: schema-data
      emptyDir: {}
